#!/usr/bin/env groovy
@Library('jenkins-shared-library')

def groovy

pipeline {
    agent any

    tools {
      maven 'Maven'
    }

    stages {
        
        stage('Increment App Version') {
            steps {
                script {
                    echo "Incrementing Application Version....."
                    sh 'mvn build-helper:parse-version versions:set \
                        -DnewVersion=\\\${parsedVersion.majorVersion}.\\\${parsedVersion.minorVersion}.\\\${parsedVersion.nextIncrementalVersion} \
                        versions:commit'
                    def matcher = readFile('pom.xml') =~ '<version>(.+)</version>'       //here we get the version of app from pom.xml 
                    def version = matcher[0][1]
                    env.IMAGE_VERSION= "$version-$BUILD_NUMBER"                           //here we add build_number to image anme
                }
            }
        }
        stage ('Init Groovy') {
            steps {
                script {
                    groovy = load "script.groovy"
                }
            }
        }
        stage('Build Jar') {
            steps {
                script {
                   build_jar()
            }
          }
        }

        stage('Build Image') {
            steps {
               script {

                   env.IMAGE_NAME = "139646/java-maven-app:$IMAGE_VERSION"    //Using IMAGE_NAME to use the version of the app + build_number
                   build_image( "$IMAGE_NAME")      
               }
            }
        }

        stage ('Deploy') {
            steps {
                script {
                   echo "Deploying the App to EC2 ....."
                   
                   
                   def deckerComposeCMD = "bash ./server-script.sh $IMAGE_NAME"

                   sshagent(['ec2-server-key']) {

                       sh 'scp server-script.sh ubuntu@ec2-3-120-159-168.eu-central-1.compute.amazonaws.com:/home/ubuntu'
                       sh 'scp docker-compose.yaml ubuntu@ec2-3-120-159-168.eu-central-1.compute.amazonaws.com:/home/ubuntu'
                       sh "ssh -o StrictHostKeyChecking=no ubuntu@ec2-3-120-159-168.eu-central-1.compute.amazonaws.com ${deckerComposeCMD}"
                   }
                   echo "Image deployed to EC2 successfuly!"
                }
            }
        }

        stage('commit version update') {
            steps {
                script {
                     withCredentials([usernamePassword(credentialsId: 'GitLab_Tokens', usernameVariable: 'USER', passwordVariable: 'PASSWORD')]) {
                          //set configurations 
                          sh 'git config --global user.email "mohmd46alaa@gmail.com"'
                          sh 'git config --global user.name "mohamedalaa13"'
                          sh 'git config -l '
                          //Using the URL below to make git Commands on
                          sh "git remote set-url origin https://${USER}:${PASSWORD}@gitlab.com/mohamedalaa13/java-maven-app.git"
                          sh 'git add .'
                          sh 'git commit -m "ci: version bump"'
                          sh 'git push origin HEAD:jenkins-shared-lib'
                     }
                }
            }
        }
    }
}
